name: Create Development Release

on:
  push:
    branches:
      - development

jobs:
  create-test-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Git
        run: |
          git remote set-url origin https://${{ secrets.GH_TOKEN }}@github.com/jpvergaralb/grupo19-backend.git
          git config --local user.email "jpvergaralb@uc.cl"
          git config --local user.name "jpvergaralb"

      - name: Get last tag
        id: gettag
        run: |
          git remote set-url origin https://${{ secrets.GH_TOKEN }}@github.com/jpvergaralb/grupo19-backend.git
          TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo "Last tag is $TAG"
          echo "::set-output name=last_tag::$TAG"

      - name: Calculate new test tag
        id: newtag
        run: |
          git remote set-url origin https://${{ secrets.GH_TOKEN }}@github.com/jpvergaralb/grupo19-backend.git
          LAST_TAG=${{ steps.gettag.outputs.last_tag }}
          IFS='.' read -ra VERSION <<< "${LAST_TAG#v}"
          NEW_VERSION="v${VERSION[0]}.${VERSION[1]}.$((${VERSION[2]} + 1))-alpha"
          echo "New test version is $NEW_VERSION"
          echo "::set-output name=new_test_version::$NEW_VERSION"

      - name: Create and push new test tag
        run: |
          git remote set-url origin https://${{ secrets.GH_TOKEN }}@github.com/jpvergaralb/grupo19-backend.git  
          NEW_TAG=${{ steps.newtag.outputs.new_test_version }}
          git tag $NEW_TAG
          git push origin $NEW_TAG

      - name: Create a GitHub Test Release
        uses: actions/create-release@v1
        env:
          GH_TOKEN:  ${{ secrets.GH_TOKEN }}
        with:
          tag_name: ${{ steps.newtag.outputs.new_test_version }}
          release_name: Test Release ${{ steps.newtag.outputs.new_test_version }}
          draft: false
          prerelease: true
